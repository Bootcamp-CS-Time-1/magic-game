apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from: rootProject.file("jacoco.gradle")

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "br.com.bootcamp.magicgamecs"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "br.com.bootcamp.magicgamecs.runner.MockTestRunner"

        buildConfigField "String", "API_BASE_URL", '"https://api.magicthegathering.io/v1/"'

    }
    androidExtensions {
        experimental = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    //MaterialDesign
    implementation "com.google.android.material:material:$material_version"
    implementation "com.github.GoodieBag:CarouselPicker:$carousel_version"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.facebook.shimmer:shimmer:$shimmer_version"

    //API Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    //API Gson
    //Converter do Retrofit para utilizar o Gson para tratar a resposta do servidor
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    //Interceptor para visualizar os logs das requisições do Retrofit
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.koin:koin-test:$koin_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "android.arch.core:core-testing:$core_testing_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
}
